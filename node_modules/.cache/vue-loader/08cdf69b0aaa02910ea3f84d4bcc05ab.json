{"remainingRequest":"C:\\Users\\adam.sutton\\Documents\\GitHub\\time-sheets\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\adam.sutton\\Documents\\GitHub\\time-sheets\\src\\components\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\adam.sutton\\Documents\\GitHub\\time-sheets\\src\\components\\Register.vue","mtime":1637669579777},{"path":"C:\\Users\\adam.sutton\\Documents\\GitHub\\time-sheets\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1637669531954},{"path":"C:\\Users\\adam.sutton\\Documents\\GitHub\\time-sheets\\node_modules\\babel-loader\\lib\\index.js","mtime":1637669528802},{"path":"C:\\Users\\adam.sutton\\Documents\\GitHub\\time-sheets\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1637669531954},{"path":"C:\\Users\\adam.sutton\\Documents\\GitHub\\time-sheets\\node_modules\\vue-loader\\lib\\index.js","mtime":1637669573351}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyIKaW1wb3J0IHsgcmVxdWlyZWQsIGVtYWlsLCBtaW5MZW5ndGgsIHNhbWVBcyB9IGZyb20gJ3Z1ZWxpZGF0ZS9saWIvdmFsaWRhdG9ycycKCmV4cG9ydCBkZWZhdWx0IHsKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgdXNlcjogewogICAgICAgICAgICAgICAgbmFtZTogJycsCiAgICAgICAgICAgICAgICBlbWFpbDogJycsCiAgICAgICAgICAgICAgICB1c2VybmFtZTogJycsCiAgICAgICAgICAgICAgICBwYXNzd29yZDogJycsCiAgICAgICAgICAgICAgICBjb25maXJtUGFzc3dvcmQ6ICcnLAogICAgICAgICAgICB9LAogICAgICAgICAgICBzdWJtaXR0ZWQ6IGZhbHNlLAogICAgICAgICAgICBVc2VyczogW10sCiAgICAgICAgICAgIHVzZXJuYW1lTGlzdDogW10sCiAgICAgICAgfQogICAgfSwKICAgIHZhbGlkYXRpb25zOiB7CiAgICAgICAgdXNlcjogewogICAgICAgICAgICBuYW1lOiB7IHJlcXVpcmVkIH0sCiAgICAgICAgICAgIGVtYWlsOiB7IHJlcXVpcmVkLCBlbWFpbCB9LAogICAgICAgICAgICB1c2VybmFtZTogeyByZXF1aXJlZCwgbWluTGVuZ3RoOiBtaW5MZW5ndGgoNCksIGlzVW5pcXVlKHVzZXJuYW1lKXsKICAgICAgICAgICAgICAgIGZvciAoIGxldCBpbmRleCBpbiB0aGlzLlVzZXJzICkgewogICAgICAgICAgICAgICAgICAgIGlmICh1c2VybmFtZSA9PT0gdGhpcy5Vc2Vyc1tpbmRleF0udXNlcm5hbWUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO319LAogICAgICAgICAgICBwYXNzd29yZDoge3JlcXVpcmVkLCBtaW5MZW5ndGg6IG1pbkxlbmd0aCg2KSB9LAogICAgICAgICAgICBjb25maXJtUGFzc3dvcmQ6IHtyZXF1aXJlZCwgc2FtZUFzUGFzc3dvcmQ6IHNhbWVBcygncGFzc3dvcmQnKSwgbWluTGVuZ3RoOiBtaW5MZW5ndGgoNikgfSwKICAgICAgICB9LAogICAgfSwKICAgIGNyZWF0ZWQoKSB7CiAgICAgICAgbGV0IGFwaVVSTCA9ICdodHRwOi8vbG9jYWxob3N0OjQwMDAvdXNlci1hcGknOwogICAgICAgIGF4aW9zLmdldChhcGlVUkwpLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgdGhpcy5Vc2VycyA9IHJlcy5kYXRhOwogICAgICAgIH0pLmNhdGNoKGVycm9yID0+IHsKICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpCiAgICAgICAgfSk7CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGhhbmRsZVN1Ym1pdEZvcm0oKSB7CiAgICAgICAgICAgIHRoaXMuc3VibWl0dGVkID0gdHJ1ZTsKICAgICAgICAgICAgdGhpcy4kdi4kdG91Y2goKTsKICAgICAgICAgICAgaWYgKHRoaXMuJHYuJGludmFsaWQpIHsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgbGV0IGFwaVVSTCA9ICdodHRwOi8vbG9jYWxob3N0OjQwMDAvdXNlci1hcGkvcmVnaXN0ZXInOwogICAgICAgICAgICAKICAgICAgICAgICAgYXhpb3MucG9zdChhcGlVUkwsIHRoaXMudXNlcikudGhlbigoKSA9PiB7CiAgICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy9sb2dpbicpCiAgICAgICAgICAgICAgdGhpcy51c2VyID0gewogICAgICAgICAgICAgICAgbmFtZTogJycsCiAgICAgICAgICAgICAgICB1c2VybmFtZTogJycsCiAgICAgICAgICAgICAgICBlbWFpbDogJycsCiAgICAgICAgICAgICAgICBwYXNzd29yZDogJycsCiAgICAgICAgICAgICAgICBjb25maXJtUGFzc3dvcmQ6ICcnLAogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkuY2F0Y2goZXJyb3IgPT4gewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpCiAgICAgICAgICAgIH0pOwogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-md-6\">\r\n            <h3 class=\"text-center\">Register</h3>\r\n            <form @submit.prevent=\"handleSubmitForm\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"required\">Full name</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"user.name\" :class=\"{ 'is-invalid': submitted && $v.user.name.$error }\">\r\n                    <div v-if=\"submitted && !$v.user.name.required\" class=\"invalid-feedback\">Name is required</div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label class=\"required\">Email</label>\r\n                    <input type=\"email\" class=\"form-control\" v-model=\"user.email\" :class=\"{ 'is-invalid': submitted && $v.user.email.$error }\">\r\n                    <div v-if=\"submitted && $v.user.email.$error\" class=\"invalid-feedback\">\r\n                        <span v-if=\"!$v.user.email.required\">Email is required</span>\r\n                        <span v-if=\"!$v.user.email.email\">Email is invalid</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label class=\"required\">Username</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"user.username\" :class=\"{ 'is-invalid': submitted && $v.user.username.$error }\">\r\n                    <div v-if=\"submitted && $v.user.username.$error\" class=\"invalid-feedback\">\r\n                        <span v-if=\"!$v.user.username.required\">Username is required</span>\r\n                        <span v-if=\"!$v.user.username.minLength\">Username must be at least 4 characters</span>\r\n                        <span v-else-if=\"!$v.user.username.isUnique\">Username must be unique</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label class=\"required\">Password</label>\r\n                    <input type=\"password\" class=\"form-control\" v-model=\"user.password\" :class=\"{ 'is-invalid': submitted && $v.user.password.$error }\">\r\n                    <div v-if=\"submitted && $v.user.password.$error\" class=\"invalid-feedback\">\r\n                        <span v-if=\"!$v.user.password.required\">Password is required</span>\r\n                        <span v-if=\"!$v.user.password.minLength\">Password must be at least 6 characters</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label class=\"required\">Confirm Password</label>\r\n                    <input type=\"password\" class=\"form-control\" v-model=\"user.confirmPassword\" :class=\"{ 'is-invalid': submitted && $v.user.confirmPassword.$error }\">\r\n                    <div v-if=\"submitted && $v.user.confirmPassword.$error\" class=\"invalid-feedback\">\r\n                        <span v-if=\"!$v.user.confirmPassword.required\">Confirm Password is required</span>\r\n                        <span v-if=\"!$v.user.confirmPassword.minLength\">Confirm Password must be at least 6 characters</span>\r\n                        <span v-else-if=\"!$v.user.confirmPassword.sameAsPassword\">Passwords must match</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <button class=\"btn btn-success btn-block\">Register</button>\r\n                </div>\r\n            </form>\r\n\r\n            \r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import axios from \"axios\"\r\n    import { required, email, minLength, sameAs } from 'vuelidate/lib/validators'\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                user: {\r\n                    name: '',\r\n                    email: '',\r\n                    username: '',\r\n                    password: '',\r\n                    confirmPassword: '',\r\n                },\r\n                submitted: false,\r\n                Users: [],\r\n                usernameList: [],\r\n            }\r\n        },\r\n        validations: {\r\n            user: {\r\n                name: { required },\r\n                email: { required, email },\r\n                username: { required, minLength: minLength(4), isUnique(username){\r\n                    for ( let index in this.Users ) {\r\n                        if (username === this.Users[index].username) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;}},\r\n                password: {required, minLength: minLength(6) },\r\n                confirmPassword: {required, sameAsPassword: sameAs('password'), minLength: minLength(6) },\r\n            },\r\n        },\r\n        created() {\r\n            let apiURL = 'http://localhost:4000/user-api';\r\n            axios.get(apiURL).then(res => {\r\n                this.Users = res.data;\r\n            }).catch(error => {\r\n                console.log(error)\r\n            });\r\n        },\r\n        methods: {\r\n            handleSubmitForm() {\r\n                this.submitted = true;\r\n                this.$v.$touch();\r\n                if (this.$v.$invalid) {\r\n                    return;\r\n                }\r\n\r\n                let apiURL = 'http://localhost:4000/user-api/register';\r\n                \r\n                axios.post(apiURL, this.user).then(() => {\r\n                  this.$router.push('/login')\r\n                  this.user = {\r\n                    name: '',\r\n                    username: '',\r\n                    email: '',\r\n                    password: '',\r\n                    confirmPassword: '',\r\n                  }\r\n                }).catch(error => {\r\n                    console.log(error)\r\n                });\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .required:after {\r\n        content:\" *\";\r\n        color: red;\r\n    }\r\n</style>"]}]}